{"version":3,"file":"main.297861a091df6e36c056.js","mappings":"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","sources":["webpack://slotjs/./src/app/constants/symbols.constants.js","webpack://slotjs/./src/app/constants/browser.constants.js","webpack://slotjs/./src/app/utils/animation.util.js","webpack://slotjs/./src/common/utils/sound/sound-buffer.js","webpack://slotjs/./src/app/services/slot-machine/sound/slot-machine-sound.service.js","webpack://slotjs/./src/common/utils/vibration/vibrate.js","webpack://slotjs/./src/app/constants/vibration.constants.js","webpack://slotjs/./src/app/services/slot-machine/vibration/slot-machine-vibration.service.js","webpack://slotjs/./src/app/utils/touch.util.js","webpack://slotjs/./src/app/utils/dom.util.js","webpack://slotjs/./src/app/components/slot-machine/reel/slot-machine-reel.component.js","webpack://slotjs/./src/app/utils/array.util.js","webpack://slotjs/./src/app/components/slot-machine/slot-machine.component.js","webpack://slotjs/./src/app/utils/format.util.js","webpack://slotjs/./src/app/components/toggle-button/toggle-button.component.js","webpack://slotjs/./src/app/components/modal-button/modal-button.component.js","webpack://slotjs/./src/app/components/modal/modal.component.js","webpack://slotjs/./src/app/components/pay-table/pay-table.component.js","webpack://slotjs/./src/app/components/app/app.component.js","webpack://slotjs/./src/app/main.js"],"sourcesContent":["export const SYMBOLS_CLASSIC = [\r\n    '🍋', '🍊', '🍉', '🍈', '🍇', '🥝', '🍓', '🍒', '🌟', '🍀', '💎', '🎰'];\r\n\r\nexport const SYMBOLS_CHRISTMAS = [\r\n    '🧣', '⛄', '🎄', '🎁', '🎀', '🍾', '🍷', '🔔', '🌟', '🦌', '🎅'];\r\n\r\nexport const SYMBOLS_HALLOWEEN = [\r\n    '🌚', '🎃', '🦇', '😈', '🧠', '👹', '👽', '🤡', '👻', '🧟‍', '🧛‍', '💀'];\r\n\r\nexport const SYMBOLS_ANIMALS = [\r\n    '🐞', '🐟', '🐭', '🐸', '🐓', '🐷', '🦀', '🐍', '🦊‍', '🦁', '🦕', '🦖'];\r\n\r\nexport const SYMBOLS_SPORTS = [\r\n    '🎯', '🎱', '🏐', '⛳', '⚾', '🏈', '🏀', '⚽', '🥉', '🥈', '🥇', '🏆'];\r\n\r\nexport const SYMBOLS_LOVE = [\r\n    '💌', '🎁', '📸', '💘', '💋', '🔞', '💑', '💍', '💎', '💖',\r\n];\r\n\r\nexport const SYMBOLS_FORTUNE = [\r\n    '🎴', '🎲', '🕶', '🥃', '💷', '💴', '💵', '💰', '🍀', '💎', '🎰', '🧞‍️', '🃏'];\r\n\r\nexport const SYMBOLS_FOOD = [\r\n    '🥦', '🍋', '🍆', '🍙', '🍯', '🍑', '🍓', '🍭', '🍫', '🍩', '🍕', '🍗', '🥩', '🍣',\r\n];\r\n\r\nexport const ALL_SYMBOLS = [\r\n    SYMBOLS_CLASSIC,\r\n    SYMBOLS_CHRISTMAS,\r\n    SYMBOLS_HALLOWEEN,\r\n    SYMBOLS_ANIMALS,\r\n    SYMBOLS_SPORTS,\r\n    SYMBOLS_LOVE,\r\n    SYMBOLS_FORTUNE,\r\n    SYMBOLS_FOOD,\r\n];\r\n\r\nexport const SYMBOLS_RANDOM = ALL_SYMBOLS[Math.random() * ALL_SYMBOLS.length | 0];\r\n","export const IS_IOS = /iPad|iPhone|iPod/.test(navigator.platform || '');\r\n\r\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().includes('firefox');\r\n\r\nexport const HAS_TOUCH = navigator.maxTouchPoints > 0\r\n    || 'ontouchstart' in window\r\n    || (window.DocumentTouch && document instanceof window.DocumentTouch);\r\n","let dynamicStyles = null;\r\n\r\nexport function addAnimation(name, body) {\r\n    if (!dynamicStyles) {\r\n        dynamicStyles = document.createElement('style');\r\n        dynamicStyles.type = 'text/css';\r\n        document.head.appendChild(dynamicStyles);\r\n    }\r\n\r\n    dynamicStyles.sheet.insertRule(`@keyframes ${ name } {\r\n        ${ body }\r\n    }`, dynamicStyles.length);\r\n}\r\n\r\nexport function resetAnimations() {\r\n    if (dynamicStyles) {\r\n        dynamicStyles.remove();\r\n\r\n        dynamicStyles = null;\r\n    }\r\n}\r\n\r\nexport function stopAtAnimation(name, start, end, alpha, speed) {\r\n    const angles = [\r\n        start,\r\n        end - (alpha * 0.25),\r\n        end + (alpha * 0.125),\r\n        end - (alpha * 0.0625),\r\n        end + (alpha * 0.03125),\r\n        end - (alpha * 0.015625),\r\n        end,\r\n    ];\r\n\r\n    let previousAngle = start;\r\n    let total = 0;\r\n\r\n    const time = angles.map((angle) => {\r\n        const delta = Math.max(Math.abs(angle - previousAngle) / Math.abs(speed), 10);\r\n\r\n        previousAngle = angle;\r\n        total += delta;\r\n\r\n        return delta;\r\n    });\r\n\r\n    let previousPercent = 0;\r\n\r\n    const percent = time.map((t) => {\r\n        const p = previousPercent + (100 * t / total);\r\n\r\n        previousPercent = p;\r\n\r\n        return p;\r\n    });\r\n\r\n    const animation = percent.map((p, i) => `${ Math.round(p) }% { transform: rotate(${ angles[i].toFixed(2) }deg); }`).join('\\n');\r\n\r\n    addAnimation(name, animation);\r\n\r\n    return total;\r\n}\r\n","export class SoundBuffer {\r\n\r\n    sounds = [];\r\n    nextSound = 0;\r\n    totalSounds = 0;\r\n\r\n    constructor(path, bufferSize = 16) {\r\n        const { sounds } = this;\r\n\r\n        for (let i = 0; i < bufferSize; ++i) {\r\n            sounds.push(new Audio(path));\r\n        }\r\n\r\n        sounds[0].oncanplay = () => { this.totalSounds = bufferSize; };\r\n    }\r\n\r\n    play(volume = 1) {\r\n        const { sounds, nextSound, totalSounds } = this;\r\n\r\n        const sound = sounds[nextSound];\r\n\r\n        if (totalSounds && sound.paused) {\r\n            sound.volume = volume;\r\n            sound.play();\r\n\r\n            this.nextSound = (nextSound + 1) % totalSounds;\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this.sounds.forEach((sound) => {\r\n            sound.pause();\r\n            sound.currentTime = 0;\r\n        });\r\n\r\n        this.nextSound = 0;\r\n    }\r\n\r\n}\r\n","import { IS_FIREFOX } from '../../../constants/browser.constants';\r\nimport { SoundBuffer } from '../../../../common/utils/sound/sound-buffer';\r\n\r\nconst extension = IS_FIREFOX ? 'ogg' : 'mp3';\r\nconst blipSound = new SoundBuffer(`./sounds/blip.${ extension }`, 32);\r\nconst coinSound = new SoundBuffer(`./sounds/coin.${ extension }`);\r\nconst stopSound = new SoundBuffer(`./sounds/stop.${ extension }`);\r\nconst unluckySound = new SoundBuffer(`./sounds/unlucky.${ extension }`);\r\nconst winSound = new SoundBuffer(`./sounds/win.${ extension }`);\r\n\r\nlet isEnabled = true;\r\n\r\nexport const SMSoundService = {\r\n\r\n    blip(...args) {\r\n        isEnabled && blipSound.play(...args);\r\n    },\r\n\r\n    coin(...args) {\r\n        isEnabled && coinSound.play(...args);\r\n    },\r\n\r\n    stop(...args) {\r\n        isEnabled && stopSound.play(...args);\r\n    },\r\n\r\n    unlucky(...args) {\r\n        isEnabled && unluckySound.play(...args);\r\n    },\r\n\r\n    win(...args) {\r\n        isEnabled && winSound.play(...args);\r\n    },\r\n\r\n    enable() {\r\n        isEnabled = true;\r\n    },\r\n\r\n    disable() {\r\n        isEnabled = false;\r\n\r\n        blipSound.stop();\r\n        coinSound.stop();\r\n        stopSound.stop();\r\n        unluckySound.stop();\r\n        winSound.stop();\r\n    },\r\n\r\n};\r\n","const { navigator } = window;\r\n\r\nexport const vibrate = navigator.vibrate ? navigator.vibrate.bind(navigator) : (() => {});\r\n","export const VIBRATION_STOP = [200, 50, 50, 50, 50, 25, 25, 25, 25, 25, 25, 25, 25];\r\n\r\nexport const VIBRATION_START = [25, 25, 25, 25, 25, 25, 25, 25, 50, 50, 50, 50, 50];\r\n","import { vibrate } from '../../../../common/utils/vibration/vibrate';\r\nimport { VIBRATION_START, VIBRATION_STOP } from '../../../constants/vibration.constants';\r\n\r\nlet isEnabled = true;\r\n\r\nexport const SMVibrationService = {\r\n\r\n    start() {\r\n        isEnabled && vibrate(VIBRATION_START);\r\n    },\r\n\r\n    stop() {\r\n        isEnabled && vibrate(VIBRATION_STOP);\r\n    },\r\n\r\n    enable() {\r\n        isEnabled = true;\r\n    },\r\n\r\n    disable() {\r\n        isEnabled = false;\r\n\r\n        vibrate(0);\r\n    },\r\n\r\n};\r\n","import { IS_IOS } from '../constants/browser.constants';\r\n\r\nlet tap = false;\r\nlet callback = null;\r\n\r\nfunction startTap() {\r\n    tap = true;\r\n}\r\n\r\nfunction stopTap() {\r\n    tap = false;\r\n}\r\n\r\nfunction invokeCallback() {\r\n    if (tap) {\r\n        callback();\r\n        tap = false;\r\n    }\r\n}\r\n\r\nexport function setGlobalClickAndTabHandler(cb) {\r\n    callback = cb;\r\n\r\n    console.trace('setGlobalClickAndTabHandler');\r\n\r\n    if (IS_IOS) {\r\n        document.ontouchstart = startTap;\r\n        document.ontouchmove = stopTap;\r\n        document.ontouchcancel = stopTap;\r\n        document.ontouchend = invokeCallback;\r\n    } else {\r\n        document.onmousedown = cb;\r\n    }\r\n}\r\n","export function createElement(className = '', content = '', angle = null, style = null) {\r\n    const element = document.createElement('DIV');\r\n\r\n    element.className = Array.isArray(className) ? className.join(' ') : className;\r\n\r\n    if (typeof content === 'string') {\r\n        element.innerText = content;\r\n    } else if (content) {\r\n        element.appendChild(content);\r\n    }\r\n\r\n    if (style) {\r\n        element.style = style;\r\n    }\r\n\r\n    if (angle !== null) {\r\n        element.style.transform = `rotate(${ angle }deg)`;\r\n    }\r\n\r\n    return element;\r\n}\r\n","import { stopAtAnimation } from '../../../utils/animation.util';\r\nimport { createElement } from '../../../utils/dom.util';\r\nimport { shuffle } from '../../../utils/array.util';\r\nimport { IS_FIREFOX } from '../../../constants/browser.constants';\r\n\r\nexport class SlotMachineReel {\r\n\r\n    // CSS classes:\r\n    static C_REEL = 'sm__reel';\r\n    static C_CELL = 'sm__cell';\r\n    static C_CELL_SHADOW = 'sm__cell--has-shadow';\r\n    static C_CELL_BLUR = 'sm__cell--has-blur';\r\n    static C_FIGURE = 'sm__figure';\r\n    static C_IS_STOP = 'is-stop';\r\n\r\n    // CSS variables:\r\n    static V_INDEX = '--index';\r\n\r\n    // Misc.:\r\n    static STOP_ANIMATION_DURATION_MULTIPLIER = 5;\r\n\r\n    // Elements:\r\n    root;\r\n    style;\r\n\r\n    // Config:\r\n    index;\r\n    alpha;\r\n    shadowCount;\r\n\r\n    // State:\r\n    angle = 0;\r\n    stopAt = 0;\r\n\r\n    constructor(index, alpha, symbols, diameter) {\r\n        this.index = index;\r\n        this.alpha = alpha;\r\n\r\n        const { C_REEL, C_CELL, C_CELL_SHADOW, C_CELL_BLUR, C_FIGURE, C_IS_STOP, V_INDEX } = SlotMachineReel;\r\n        const root = this.root = createElement([C_REEL, C_IS_STOP]);\r\n        const style = this.style = root.style;\r\n\r\n        style.setProperty(V_INDEX, index);\r\n\r\n        if (!symbols) {\r\n            return;\r\n        }\r\n\r\n        let cellShadowClasses;\r\n        let shadowOpacityWeight;\r\n\r\n        if (IS_FIREFOX) {\r\n            cellShadowClasses = [C_CELL, C_CELL_SHADOW];\r\n            shadowOpacityWeight = 0.5;\r\n        } else {\r\n            cellShadowClasses = [C_CELL, C_CELL_SHADOW, C_CELL_BLUR];\r\n            shadowOpacityWeight = 1;\r\n        }\r\n\r\n        const shadowCount = this.shadowCount = Math.max(2, Math.round((diameter - 0.5 - (2 * index)) * Math.PI / symbols.length));\r\n        const beta = 1 / shadowCount;\r\n\r\n        shuffle(symbols);\r\n\r\n        symbols.forEach((symbol, symbolIndex) => {\r\n            const cellFigure = createElement(C_FIGURE, symbol);\r\n            const cell = createElement(C_CELL, cellFigure, symbolIndex * alpha);\r\n\r\n            root.appendChild(cell);\r\n\r\n            for (let shadowIndex = 1; shadowIndex < shadowCount; ++shadowIndex) {\r\n                root.appendChild(createElement(\r\n                    cellShadowClasses,\r\n                    cellFigure.cloneNode(true),\r\n                    alpha * (symbolIndex + (beta * shadowIndex)),\r\n                    `opacity: ${ shadowOpacityWeight * (1 - (beta * shadowIndex)) }; `,\r\n                ));\r\n            }\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        const { root, style, stopAt } = this;\r\n\r\n        root.classList.remove('is-stop');\r\n        style.transform = `rotate(${ this.angle = ((360 - stopAt) % 360) }deg)`;\r\n        style.animation = '';\r\n\r\n        this.stopAt = 0;\r\n    }\r\n\r\n    stop(speed, deltaAlpha) {\r\n        const { alpha, root } = this;\r\n        const angle = (360 - this.angle - deltaAlpha) % 360;\r\n        const index = Math.ceil(angle / alpha);\r\n        const stopAt = index * alpha;\r\n        const animationName = `stop-${ this.index }`;\r\n        const animationDuration = stopAtAnimation(\r\n            animationName,\r\n            (360 - angle) % 360,\r\n            (360 - stopAt) % 360,\r\n            alpha,\r\n            speed,\r\n        ) * SlotMachineReel.STOP_ANIMATION_DURATION_MULTIPLIER;\r\n\r\n        this.stopAt = stopAt;\r\n        this.style.animation = `${ animationName } ${ animationDuration }ms ease-out forwards`;\r\n        root.classList.add(SlotMachineReel.C_IS_STOP);\r\n\r\n        return (root.children[index * this.shadowCount] || root.children[0]).innerText;\r\n    }\r\n\r\n}\r\n","export function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; --i) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n\r\n        // eslint-disable-next-line no-param-reassign\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n\r\n    return a;\r\n}\r\n","import { SYMBOLS_CLASSIC } from '../../constants/symbols.constants';\r\nimport { resetAnimations } from '../../utils/animation.util';\r\nimport { SMSoundService } from '../../services/slot-machine/sound/slot-machine-sound.service';\r\nimport { SMVibrationService } from '../../services/slot-machine/vibration/slot-machine-vibration.service';\r\nimport { IS_FIREFOX } from '../../constants/browser.constants';\r\nimport { setGlobalClickAndTabHandler } from '../../utils/touch.util';\r\n\r\nimport { SlotMachineReel } from './reel/slot-machine-reel.component';\r\n\r\nimport './slot-machine.style.scss';\r\n\r\n\r\nexport class SlotMachine {\r\n\r\n    // CSS classes:\r\n    static C_HAS_ZOOM = 'has-zoom';\r\n    static C_IS_WIN = 'is-win';\r\n    static C_IS_FAIL = 'is-fail';\r\n\r\n    // CSS selectors:\r\n    static S_BASE = '.sm__base';\r\n    static S_REELS_CONTAINER = '.sm__reelsContainer';\r\n    static S_DISPLAY = '.sm__display';\r\n\r\n    // CSS variables:\r\n    static V_WRAPPER_SIZE = '--wrapperSize';\r\n    static V_REEL_SIZE = '--reelSize';\r\n    static V_DISPLAY_SIZE = '--displaySize';\r\n    static V_DISPLAY_ZOOM = '--displayZoom';\r\n    static V_SHADOW_WEIGHT = '--shadowWeight';\r\n\r\n    // Misc.:\r\n    static UNITS_CENTER = 3;\r\n    static UNITS_MARGIN = 1;\r\n    static UNITS_TOTAL = SlotMachine.UNITS_CENTER + SlotMachine.UNITS_MARGIN;\r\n    static ZOOM_TRANSITION = 'transform ease-in-out 500ms 250ms';\r\n    static ZOOM_TRANSITION_DURATION = 1000;\r\n    static BLIP_RATE = 4;\r\n    static FIREFOX_SHADOW_WEIGHT = 0.5;\r\n    static APP_PADDING = 32;\r\n\r\n    // Elements:\r\n    wrapper;\r\n    root = document.querySelector(SlotMachine.S_BASE);\r\n    reelsContainer = document.querySelector(SlotMachine.S_REELS_CONTAINER);\r\n    display = document.querySelector(SlotMachine.S_DISPLAY);\r\n    reels = [];\r\n\r\n    // Config:\r\n    blipFading;\r\n    reelCount;\r\n    symbols;\r\n    alpha;\r\n    speed;\r\n\r\n    // State:\r\n    zoomTransitionTimeoutID = null;\r\n    currentCombination = [];\r\n    currentReel = null;\r\n    blipCounter = 0;\r\n    lastUpdate = 0;\r\n    isPaused = false;\r\n    keydownTimeoutID = null;\r\n    keydownLastCalled = 0;\r\n\r\n    constructor(\r\n        wrapper,\r\n        handleUseCoin,\r\n        handleGetPrice,\r\n        reelCount = 3,\r\n        symbols = SYMBOLS_CLASSIC,\r\n        isPaused = false,\r\n        speed = -0.552, // TODO: Make enum and match sounds too.\r\n    ) {\r\n        this.init(wrapper, handleUseCoin, handleGetPrice, reelCount, symbols, speed);\r\n\r\n        window.onresize = this.handleResize.bind(this);\r\n        document.onkeydown = this.handleKeyDown.bind(this);\r\n        document.onkeyup = this.handleKeyUp.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        if (isPaused) {\r\n            this.pause();\r\n        } else {\r\n            this.resume();\r\n        }\r\n    }\r\n\r\n    init(\r\n        wrapper,\r\n        handleUseCoin,\r\n        handleGetPrice,\r\n        reelCount,\r\n        symbols,\r\n        speed,\r\n    ) {\r\n        this.wrapper = wrapper;\r\n        this.handleUseCoin = handleUseCoin;\r\n        this.handleGetPrice = handleGetPrice;\r\n        this.reelCount = reelCount;\r\n        this.symbols = symbols;\r\n        this.speed = speed;\r\n        this.blipFading = 1 / reelCount;\r\n\r\n        const alpha = this.alpha = 360 / symbols.length;\r\n        const shuffledSymbols = [...symbols];\r\n        const diameter = (2 * reelCount) + SlotMachine.UNITS_CENTER;\r\n\r\n        // Sets --reelSize and --displaySize:\r\n        this.resize();\r\n\r\n        if (IS_FIREFOX) {\r\n            this.root.style.setProperty(SlotMachine.V_SHADOW_WEIGHT, SlotMachine.FIREFOX_SHADOW_WEIGHT);\r\n        }\r\n\r\n        const { reelsContainer, reels } = this;\r\n\r\n        for (let reelIndex = 0; reelIndex < reelCount; ++reelIndex) {\r\n            const reel = new SlotMachineReel(reelIndex, alpha, shuffledSymbols, diameter);\r\n\r\n            reelsContainer.appendChild(reel.root);\r\n            reels.push(reel);\r\n        }\r\n\r\n        // Additional reel at the end that acts as a \"cover\" in case we set a background color on them and we only want\r\n        // to see a ring even in the inner-most one, instead of a filled circle:\r\n        reelsContainer.appendChild(new SlotMachineReel(reelCount).root);\r\n    }\r\n\r\n    start() {\r\n        this.handleUseCoin();\r\n        this.currentCombination = [];\r\n        this.currentReel = 0;\r\n        this.zoomOut();\r\n        this.display.classList.remove(SlotMachine.C_IS_WIN, SlotMachine.C_IS_FAIL);\r\n        this.reels.forEach((reel) => reel.reset());\r\n        resetAnimations();\r\n\r\n        SMSoundService.coin();\r\n        SMVibrationService.start();\r\n\r\n        this.lastUpdate = performance.now();\r\n        requestAnimationFrame(() => this.tick());\r\n    }\r\n\r\n    stop() {\r\n        const currentPrize = this.checkPrize();\r\n\r\n        this.currentReel = null;\r\n        this.zoomIn();\r\n\r\n        if (currentPrize) {\r\n            SMSoundService.win();\r\n\r\n            this.display.classList.add(SlotMachine.C_IS_WIN);\r\n\r\n            this.handleGetPrice(currentPrize);\r\n        } else {\r\n            SMSoundService.unlucky();\r\n\r\n            this.display.classList.add(SlotMachine.C_IS_FAIL);\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        const { reels, speed, currentReel, lastUpdate } = this;\r\n        const now = performance.now();\r\n        const deltaTime = now - lastUpdate;\r\n        const deltaAlpha = deltaTime * speed;\r\n\r\n        if (currentReel === null || this.isPaused) {\r\n            return;\r\n        }\r\n\r\n        const blipCounter = this.blipCounter = (this.blipCounter + 1) % SlotMachine.BLIP_RATE;\r\n\r\n        if (blipCounter === 0) SMSoundService.blip(1 - (this.blipFading * currentReel));\r\n\r\n        this.lastUpdate = now;\r\n\r\n        for (let i = reels.length - 1; i >= currentReel; --i) {\r\n            const reel = reels[i];\r\n            const angle = reel.angle = (360 + (reel.angle + deltaAlpha)) % 360;\r\n\r\n            reel.style.transform = `rotate(${ angle }deg)`;\r\n        }\r\n\r\n        requestAnimationFrame(() => this.tick());\r\n    }\r\n\r\n    zoomIn() {\r\n        this.zoom();\r\n    }\r\n\r\n    zoomOut() {\r\n        this.zoom(true);\r\n    }\r\n\r\n    zoom(out = false) {\r\n        clearTimeout(this.zoomTransitionTimeoutID);\r\n\r\n        const { root } = this;\r\n\r\n        root.style.transition = SlotMachine.ZOOM_TRANSITION;\r\n        root.classList[out ? 'remove' : 'add'](SlotMachine.C_HAS_ZOOM);\r\n\r\n        // We do this as transition end will bubble up and fire a lot of times, not only for this transition:\r\n        this.zoomTransitionTimeoutID = setTimeout(() => {\r\n            root.style.transition = '';\r\n        }, SlotMachine.ZOOM_TRANSITION_DURATION);\r\n    }\r\n\r\n    resize() {\r\n        const { wrapper, root, reelCount, display } = this;\r\n        const { style } = root;\r\n        const { offsetWidth, offsetHeight } = wrapper;\r\n        const wrapperSize = Math.min(offsetWidth, offsetHeight) - SlotMachine.APP_PADDING;\r\n        const reelSize = wrapperSize / ((2 * reelCount) + SlotMachine.UNITS_TOTAL) | 0;\r\n\r\n        if (wrapperSize <= 0 || reelSize <= 0 || root.offsetWidth / display.offsetWidth <= 0) {\r\n            requestAnimationFrame(() => this.resize());\r\n\r\n            return;\r\n        }\r\n\r\n        style.setProperty(SlotMachine.V_WRAPPER_SIZE, `${ wrapperSize }px`);\r\n        style.setProperty(SlotMachine.V_REEL_SIZE, `${ reelSize }px`);\r\n        style.setProperty(SlotMachine.V_DISPLAY_SIZE, `${ reelSize * reelCount }px`);\r\n        style.setProperty(SlotMachine.V_DISPLAY_ZOOM, `${ root.offsetWidth / display.offsetWidth }`);\r\n    }\r\n\r\n    stopReel(reelIndex) {\r\n        const { speed } = this;\r\n        const deltaAlpha = (performance.now() - this.lastUpdate) * speed;\r\n\r\n        this.currentCombination.push(this.reels[reelIndex].stop(speed, deltaAlpha));\r\n\r\n        SMSoundService.stop();\r\n        SMVibrationService.stop();\r\n    }\r\n\r\n    checkPrize() {\r\n        const { currentCombination, reelCount, symbols } = this;\r\n        const occurrencesCount = {};\r\n\r\n        let maxOccurrences = 0;\r\n        let lastSymbol = '';\r\n        let maxSymbol = '';\r\n        let maxPrize = 0;\r\n\r\n        for (let i = 0; i < reelCount; ++i) {\r\n            const symbol = currentCombination[i];\r\n            const occurrences = occurrencesCount[symbol] = lastSymbol === symbol ? occurrencesCount[symbol] + 1 : 1;\r\n\r\n            lastSymbol = symbol;\r\n\r\n            if (occurrences > maxOccurrences) {\r\n                maxOccurrences = occurrences;\r\n\r\n                const index = symbols.indexOf(symbol);\r\n                const maxIndex = symbols.indexOf(maxSymbol); // TODO: Calculate every time?\r\n\r\n                if (index > maxIndex) {\r\n                    maxSymbol = symbol;\r\n                    maxPrize = index + 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        // TODO: Use a constant for this `2`:\r\n        return maxOccurrences > 2 ? maxOccurrences * (maxPrize / symbols.length) / reelCount : null;\r\n    }\r\n\r\n    handleResize() {\r\n        requestAnimationFrame(() => this.resize());\r\n    }\r\n\r\n    handleKeyDown(e) {\r\n        window.clearTimeout(this.keydownTimeoutID);\r\n\r\n        const { key } = e;\r\n\r\n        // TODO: This should not be here:\r\n        // if (key === 'Esc') {\r\n        //     document.activeElement.blur();\r\n\r\n        //     return;\r\n        // }\r\n\r\n        if (this.isPaused || document.activeElement !== document || ![' ', 'Enter'].includes(key)) return;\r\n\r\n        const elapsed = Date.now() - this.keydownLastCalled;\r\n\r\n        if (elapsed >= 1000) {\r\n            this.handleClick();\r\n        } else {\r\n            this.keydownTimeoutID = window.setTimeout(this.handleClick.bind(this), 1000 - elapsed);\r\n        }\r\n    }\r\n\r\n    handleKeyUp(e) {\r\n        if (![' ', 'Enter'].includes(e.key)) return;\r\n\r\n        window.clearTimeout(this.keydownTimeoutID);\r\n\r\n        this.keydownLastCalled = 0;\r\n    }\r\n\r\n    handleClick(e = null) {\r\n        window.clearTimeout(this.keydownTimeoutID);\r\n\r\n        this.keydownLastCalled = Date.now();\r\n\r\n        // Keyboard events (above) will call this without passing down `e`:\r\n\r\n        if (e) {\r\n            const { target } = e;\r\n            const targetTagName = target.tagName;\r\n            const parentTagName = target.parentElement.tagName;\r\n\r\n            if (/^A|BUTTON$/.test(targetTagName) || /^A|BUTTON$/.test(parentTagName)) {\r\n                // TODO: This is only needed for links.\r\n\r\n                document.activeElement.blur();\r\n\r\n                return;\r\n            }\r\n\r\n            // TODO: Should be e.button instead?\r\n            if (e.which === 3) return;\r\n        }\r\n\r\n        const { currentReel } = this;\r\n\r\n        if (currentReel === null) {\r\n            this.start();\r\n        } else {\r\n            ++this.currentReel;\r\n\r\n            this.stopReel(currentReel);\r\n\r\n            if (currentReel === this.reels.length - 1) {\r\n                this.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        setGlobalClickAndTabHandler(null);\r\n\r\n        this.isPaused = true;\r\n    }\r\n\r\n    resume() {\r\n        setGlobalClickAndTabHandler(this.handleClick);\r\n\r\n        this.isPaused = false;\r\n\r\n        if (this.currentReel !== null) requestAnimationFrame(() => this.tick());\r\n    }\r\n\r\n}\r\n","export function capitalize(str = '') {\r\n    const parts = str.toLowerCase().split('-');\r\n\r\n    return parts.map((part) => {\r\n        const firstChar = part[0];\r\n\r\n        return `${ firstChar.toUpperCase() }${ part.substring(1) }`;\r\n    }).join(' ');\r\n}\r\n","import { capitalize } from '../../utils/format.util';\r\n\r\nexport class ToggleButton {\r\n\r\n    // CSS classes:\r\n    static C_IS_DISABLED = 'is-disabled';\r\n\r\n    // Elements:\r\n    root;\r\n    icon;\r\n\r\n    // State:\r\n    key;\r\n    value;\r\n    onButtonClick;\r\n\r\n    constructor(selector, key, initialValue, onButtonClick) {\r\n        const root = this.root = document.querySelector(selector);\r\n\r\n        this.icon = root.children[0];\r\n\r\n        this.key = key;\r\n        this.onButtonClick = onButtonClick;\r\n\r\n        if (initialValue) {\r\n            this.enable();\r\n        } else {\r\n            this.disable();\r\n        }\r\n\r\n        root.onclick = this.handleButtonClicked.bind(this);\r\n    }\r\n\r\n    enable() {\r\n        const label = capitalize(this.key);\r\n\r\n        this.root.classList.remove(ToggleButton.C_IS_DISABLED);\r\n        this.root.setAttribute('title', `Turn ${ label } Off`);\r\n        this.root.setAttribute('aria-label', `Turn ${ label } Off`);\r\n        this.icon.setAttribute('aria-label', `${ label } Is On`);\r\n\r\n        this.value = true;\r\n        this.onButtonClick && this.onButtonClick(this.key, true);\r\n    }\r\n\r\n    disable() {\r\n        const label = capitalize(this.key);\r\n\r\n        this.root.classList.add(ToggleButton.C_IS_DISABLED);\r\n        this.root.setAttribute('title', `Turn ${ label } On`);\r\n        this.root.setAttribute('aria-label', `Turn ${ label } On`);\r\n        this.icon.setAttribute('aria-label', `${ label } Is Off`);\r\n\r\n        this.value = false;\r\n        this.onButtonClick && this.onButtonClick(this.key, false);\r\n    }\r\n\r\n    toggle() {\r\n        if (this.value) {\r\n            this.disable();\r\n        } else {\r\n            this.enable();\r\n        }\r\n    }\r\n\r\n    handleButtonClicked(e) {\r\n        e.stopPropagation();\r\n\r\n        document.activeElement.blur();\r\n\r\n        this.toggle();\r\n    }\r\n\r\n}\r\n","export class ModalButton {\r\n\r\n    // CSS classes:\r\n    static C_IS_OPEN = 'is-open';\r\n\r\n    // Elements:\r\n    root;\r\n\r\n    // State:\r\n    label;\r\n    isOpen;\r\n\r\n    // Callbacks:\r\n    onButtonClick;\r\n\r\n    constructor(selector, label, isOpen, onButtonClick) {\r\n        const root = this.root = document.querySelector(selector);\r\n\r\n        this.label = label;\r\n        this.onButtonClick = onButtonClick;\r\n\r\n        if (isOpen) {\r\n            this.open();\r\n        } else {\r\n            this.close();\r\n        }\r\n\r\n        root.onclick = this.handleButtonClicked.bind(this);\r\n    }\r\n\r\n    open() {\r\n        const { label } = this;\r\n\r\n        this.root.classList.add(ModalButton.C_IS_OPEN);\r\n        this.root.setAttribute('title', `Close ${ label }`);\r\n        this.root.setAttribute('aria-label', `Close ${ label }`);\r\n\r\n        this.isOpen = true;\r\n        this.onButtonClick && this.onButtonClick(true);\r\n    }\r\n\r\n    close() {\r\n        const { label } = this;\r\n\r\n        this.root.classList.remove(ModalButton.C_IS_OPEN);\r\n        this.root.setAttribute('title', `Open ${ label }`);\r\n        this.root.setAttribute('aria-label', `Open ${ label }`);\r\n\r\n        this.isOpen = false;\r\n        this.onButtonClick && this.onButtonClick(false);\r\n    }\r\n\r\n    toggle() {\r\n        if (this.isOpen) {\r\n            this.close();\r\n        } else {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    handleButtonClicked(e) {\r\n        e.stopPropagation();\r\n\r\n        document.activeElement.blur();\r\n\r\n        this.toggle();\r\n    }\r\n\r\n}\r\n","import { capitalize } from '../../utils/format.util';\r\nimport { ModalButton } from '../modal-button/modal-button.component';\r\n\r\nexport class Modal {\r\n\r\n    // Shared across instances:\r\n    static OPEN_MODAL = null;\r\n\r\n    // CSS selectors:\r\n    static S_CLOSE_BUTTON = '.modal__button';\r\n\r\n    // CSS classes:\r\n    static C_IS_OPEN = 'is-open';\r\n\r\n    // Elements:\r\n    root;\r\n    closeButton;\r\n    modalButton;\r\n\r\n    // State:\r\n    key;\r\n    isOpen;\r\n    isFixed;\r\n\r\n    // Callbacks:\r\n    onModalToggled;\r\n\r\n\r\n    constructor(selectorRoot, selectorButton, key, isOpen, isFixed, onModalToggled) {\r\n        this.root = document.querySelector(selectorRoot);\r\n        this.closeButton = this.root.querySelector(Modal.S_CLOSE_BUTTON);\r\n\r\n        this.modalButton = new ModalButton(\r\n            selectorButton,\r\n            capitalize(key),\r\n            isOpen,\r\n            this.handleButtonClicked.bind(this),\r\n        );\r\n\r\n        this.key = key;\r\n\r\n        this.onModalToggled = onModalToggled;\r\n\r\n        if (isOpen) {\r\n            this.open('init', isFixed);\r\n        } else {\r\n            this.close('init');\r\n        }\r\n\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n\r\n        this.closeButton.onclick = (e) => {\r\n            e.stopPropagation();\r\n\r\n            document.activeElement.blur();\r\n\r\n            this.close('close');\r\n        };\r\n    }\r\n\r\n    addEventListeners() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        document.addEventListener('click', this.handleClickOutside);\r\n    }\r\n\r\n    removeEventListeners() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n        document.removeEventListener('click', this.handleClickOutside);\r\n    }\r\n\r\n    handleKeyDown({ key }) {\r\n        if (!this.isFixed && (key === 'Esc' || key === 'Escape')) this.close('esc');\r\n    }\r\n\r\n    handleButtonClicked(isOpen) {\r\n        if (this.isFixed || this.isOpen === undefined || this.isOpen === isOpen) return;\r\n\r\n        this.toggle('toggle');\r\n    }\r\n\r\n    handleClickOutside({ target }) {\r\n        if (this.isFixed || target === this.root || this.root.contains(target)) return;\r\n\r\n        this.close('outside');\r\n\r\n    }\r\n\r\n    open(key, isFixed) {\r\n        if (Modal.OPEN_MODAL) Modal.OPEN_MODAL.close();\r\n\r\n        Modal.OPEN_MODAL = this;\r\n\r\n        if (isFixed) this.setFixed();\r\n\r\n        this.root.classList.add(Modal.C_IS_OPEN);\r\n\r\n        this.isOpen = true;\r\n        this.isFixed = isFixed;\r\n        this.onModalToggled && this.onModalToggled(true, `${ this.key }-${ key }`);\r\n\r\n        this.modalButton.open();\r\n\r\n        this.addEventListeners();\r\n    }\r\n\r\n    close(key) {\r\n        Modal.OPEN_MODAL = null;\r\n\r\n        // if (key !== 'init') this.removeEventListeners();\r\n        this.removeEventListeners();\r\n\r\n        this.root.classList.remove(Modal.C_IS_OPEN);\r\n\r\n        if (this.isFixed) this.setDismissible();\r\n\r\n        this.isOpen = false;\r\n        this.isFixed = false;\r\n        this.onModalToggled && this.onModalToggled(false, `${ this.key }-${ key }`);\r\n\r\n        this.modalButton.close();\r\n    }\r\n\r\n    toggle(key) {\r\n        if (this.isOpen) {\r\n            this.close(key);\r\n        } else {\r\n            this.open(key);\r\n        }\r\n    }\r\n\r\n    setFixed() {\r\n        this.closeButton.setAttribute('hidden', true);\r\n    }\r\n\r\n    setDismissible() {\r\n        this.closeButton.removeAttribute('hidden');\r\n    }\r\n\r\n}\r\n","export class PayTable {\r\n\r\n    // CSS classes:\r\n    static C_BASE = 'pt__base';\r\n    static C_ACTIVE = 'pt__base--activeC';\r\n    static C_COLUMN = 'pt__c';\r\n\r\n    // CSS selectors:\r\n    static S_ROOT = '.pt__base';\r\n    static S_HEADER = '.pt__header';\r\n    static S_INITIALLY_ACTIVE_COLUMN = '.pt__header .pt__c2';\r\n\r\n    // Elements:\r\n    root = document.querySelector(PayTable.S_ROOT);\r\n\r\n    // State:\r\n    payMatrix = {};\r\n    activeColumn = null;\r\n\r\n    constructor(symbols) {\r\n        const total = symbols.length;\r\n\r\n        const headerHTML = `\r\n            <li class=\"pt__header\">\r\n                <div class=\"pt__rowContent\">\r\n                    <span class=\"pt__c1\"></span>\r\n                    <button class=\"pt__c2 pt__tab\"><span class=\"pt__tabText\">× 3</span></button>\r\n                    <button class=\"pt__c3 pt__tab\"><span class=\"pt__tabText\">× 4</span></button>\r\n                    <button class=\"pt__c4 pt__tab\"><span class=\"pt__tabText\">× 5</span></button>\r\n                </div>\r\n            </li>\r\n        `;\r\n\r\n        this.root.innerHTML = headerHTML + symbols.map((symbol, i) => {\r\n            const figureWeight = (i + 1) / total * 100;\r\n            const pay3 = figureWeight * 0.6;\r\n            const pay4 = figureWeight * 0.8;\r\n            const pay5 = figureWeight;\r\n\r\n            this.payMatrix[symbol] = [pay3, pay4, pay5];\r\n\r\n            return `\r\n                <li class=\"pt__row\">\r\n                    <div class=\"pt__rowContent\">\r\n                        <span class=\"pt__c1\">${ symbol }</span>\r\n                        <span class=\"pt__c2\">${ pay3.toFixed(2) } %</span>\r\n                        <span class=\"pt__c3\">${ pay4.toFixed(2) } %</span>\r\n                        <span class=\"pt__c4\">${ pay5.toFixed(2) } %</span>\r\n                    </div>\r\n                </li>\r\n            `;\r\n        }).join('');\r\n\r\n        this.activeColumn = this.root.querySelector(PayTable.S_INITIALLY_ACTIVE_COLUMN);\r\n\r\n        this.root.querySelector(PayTable.S_HEADER).addEventListener('click', this.handleColumnClicked.bind(this));\r\n    }\r\n\r\n    handleColumnClicked({ target }) {\r\n        const column = parseInt(target.className.replace(PayTable.C_COLUMN, ''), 10) || 0;\r\n\r\n        if (column <= 1 || target === this.activeColumn) return;\r\n\r\n        this.activeColumn = target;\r\n\r\n        this.root.className = `${ PayTable.C_BASE } ${ PayTable.C_ACTIVE }${ column }`;\r\n\r\n        document.activeElement.blur();\r\n    }\r\n\r\n}\r\n","import { SYMBOLS_RANDOM } from '../../constants/symbols.constants';\r\nimport { HAS_TOUCH } from '../../constants/browser.constants';\r\nimport { SlotMachine } from '../slot-machine/slot-machine.component';\r\nimport { ToggleButton } from '../toggle-button/toggle-button.component';\r\nimport { Modal } from '../modal/modal.component';\r\nimport { PayTable } from '../pay-table/pay-table.component';\r\nimport { SMSoundService } from '../../services/slot-machine/sound/slot-machine-sound.service';\r\nimport { SMVibrationService } from '../../services/slot-machine/vibration/slot-machine-vibration.service';\r\n\r\nimport './app.style.scss';\r\nimport '../header/header.styles.scss';\r\nimport '../footer/footer.styles.scss';\r\nimport '../modal/modal.styles.scss';\r\nimport '../pay-table/pay-table.styles.scss';\r\nimport '../instructions/instructions.styles.scss';\r\n\r\nconst SERVICES = {\r\n    sound: SMSoundService,\r\n    vibration: SMVibrationService,\r\n};\r\n\r\nconst handleOptionChange = (key, value) => {\r\n    const service = SERVICES[key];\r\n\r\n    if (service) service[value ? 'enable' : 'disable']();\r\n\r\n    localStorage.setItem(key, value);\r\n};\r\n\r\nexport class App {\r\n\r\n    // CSS classes:\r\n    static C_FOCUS_ACTIVE = 'focus-active';\r\n\r\n    // CSS selectors:\r\n    static S_COINS = '#coins';\r\n    static S_JACKPOT = '#jackpot';\r\n    static S_SPINS = '#spins';\r\n    static S_MAIN = '#main';\r\n    static S_TOGGLE_SOUND = '#toggleSound';\r\n    static S_TOGGLE_VIBRATION = '#toggleVibration';\r\n    static S_VIBRATION_INSTRUCTIONS = '#vibrationInstructions';\r\n    static S_INSTRUCTIONS_MODAL = '#instructionsModal';\r\n    static S_INSTRUCTIONS_MODAL_BUTTON = '#toggleInstructions';\r\n    static S_PAY_TABLE_MODAL = '#payTableModal';\r\n    static S_PAY_TABLE_MODAL_BUTTON = '#togglePayTable';\r\n    static S_PLAY = '#playButton';\r\n\r\n    // Misc.:\r\n    static ONE_DAY = 1000 * 60 * 60 * 24;\r\n\r\n    // Elements:\r\n    coinsElement = document.querySelector(App.S_COINS);\r\n    jackpotElement = document.querySelector(App.S_JACKPOT);\r\n    spinsElement = document.querySelector(App.S_SPINS);\r\n    mainElement = document.querySelector(App.S_MAIN);\r\n\r\n    // Components:\r\n    slotMachine;\r\n    payTable;\r\n    instructionsModal;\r\n\r\n    // State:\r\n    // TODO: Create constants in a config file for all these numbers...\r\n    coins = parseInt(localStorage.coins, 10) || 100;\r\n    jackpot = parseInt(localStorage.jackpot, 10) || 1000;\r\n    spins = parseInt(localStorage.spins, 10) || 0;\r\n    lastSpin = localStorage.lastSpin || 0;\r\n    isSoundDisabled = localStorage.sound === 'false';\r\n    isVibrationDisabled = localStorage.vibration === 'false';\r\n    isFirstTime = localStorage.firstTime !== 'false';\r\n\r\n    constructor() {\r\n        const now = Date.now();\r\n\r\n        // Update jackpot randomly:\r\n        if (now - this.lastSpin >= App.ONE_DAY) {\r\n            localStorage.jackpot = this.jackpot = Math.max(500, this.jackpot - 500 + (Math.random() * 1000)) | 0;\r\n            localStorage.lastSpin = now;\r\n        }\r\n\r\n        // Bind event listeners:\r\n        this.handleModalToggle = this.handleModalToggle.bind(this);\r\n        this.handleUseCoin = this.handleUseCoin.bind(this);\r\n        this.handleGetPrice = this.handleGetPrice.bind(this);\r\n\r\n        let focusActive = false;\r\n\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.key === 'Tab' && !focusActive) {\r\n                focusActive = true;\r\n                document.body.classList.add(App.C_FOCUS_ACTIVE);\r\n            } else if (e.key === 'Escape' && focusActive) {\r\n                focusActive = false;\r\n                document.body.classList.remove(App.C_FOCUS_ACTIVE);\r\n            }\r\n        });\r\n\r\n        document.addEventListener('mousedown', () => {\r\n            focusActive = false;\r\n            document.body.classList.remove(App.C_FOCUS_ACTIVE);\r\n        });\r\n\r\n        // Init/render conditional parts of the UI such as vibration and first-time only features:\r\n        this.initUI();\r\n\r\n        /*\r\n        // TODO: Move this to CheatMode component.\r\n\r\n        const originalSpeed = slotMachine.speed;\r\n\r\n        let confirmation;\r\n        let yes;\r\n        let no;\r\n\r\n        const wait = () => {\r\n            // eslint-disable-next-line no-console\r\n            console.log('Ok... 👌');\r\n\r\n            setTimeout(() => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(confirmation);\r\n            }, 5000 + Math.random() * 5000);\r\n        };\r\n\r\n        const cheat = () => {\r\n            slotMachine.speed = originalSpeed / 100;\r\n            confirmation = 'Ok, really... Last chance. Do yo want to go back to normal mode? 😠';\r\n            yes = normal; // eslint-disable-line no-use-before-define\r\n            no = wait;\r\n\r\n            // eslint-disable-next-line no-console\r\n            console.log('Ok, but remember time will go on as normal for you... ⏳');\r\n            // eslint-disable-next-line max-len, no-console\r\n            console.log('Do you want to go back before it\\'s too late?\r\n            You don\\'t want to happen to you what happened to Captain America 🛡️, do you?');\r\n        };\r\n\r\n        const normal = () => {\r\n            slotMachine.speed = originalSpeed;\r\n            confirmation = 'I\\'m sure you are gonna like it...? Wanna play in God mode? 😏 💰';\r\n            yes = cheat;\r\n            no = wait;\r\n\r\n            // eslint-disable-next-line no-console\r\n            console.log('Playing in normal mode.');\r\n            // eslint-disable-next-line no-console\r\n            console.log('Wanna switch to God mode? 😏');\r\n        };\r\n\r\n        normal();\r\n\r\n        const yesGetter = () => { yes(); };\r\n        const noGetter = () => { no(); };\r\n\r\n        Object.defineProperties(window, {\r\n            yes: { get: yesGetter },\r\n            no: { get: noGetter },\r\n            Yes: { get: yesGetter },\r\n            No: { get: noGetter },\r\n        });\r\n\r\n        */\r\n\r\n\r\n    }\r\n\r\n    handleUseCoin() {\r\n        localStorage.coins = this.coins = Math.max(this.coins - 1, 0) || 100;\r\n        localStorage.jackpot = ++this.jackpot;\r\n        localStorage.spins = ++this.spins;\r\n        localStorage.lastSpin = this.lastSpin = Date.now();\r\n\r\n        this.refreshGameInfo();\r\n    }\r\n\r\n    handleGetPrice(jackpotPercentage) {\r\n        const price = Math.min(Math.max(Math.ceil(jackpotPercentage * this.jackpot), 10), this.jackpot);\r\n\r\n        localStorage.jackpot = this.jackpot = Math.max(this.jackpot - price, 0) || 1000;\r\n        localStorage.coins = this.coins += price;\r\n\r\n        this.refreshGameInfo();\r\n    }\r\n\r\n    refreshGameInfo() {\r\n        const maxValue = Math.max(this.coins, this.jackpot, this.spins);\r\n        const padding = Math.max(Math.ceil(maxValue.toString().length / 2) * 2, 5);\r\n\r\n        this.coinsElement.innerText = `${ this.coins }`.padStart(padding, '0');\r\n        this.jackpotElement.innerText = `${ this.jackpot }`.padStart(padding, '0');\r\n        this.spinsElement.innerText = `${ this.spins }`.padStart(padding, '0');\r\n    }\r\n\r\n    initUI() {\r\n        const { isFirstTime } = this;\r\n\r\n        // Init/render the game info at the top:\r\n        this.refreshGameInfo();\r\n\r\n        if (!HAS_TOUCH) {\r\n            // TODO: Move to toggle button?\r\n            document.querySelector(App.S_TOGGLE_VIBRATION).parentElement.setAttribute('hidden', true);\r\n            // TODO: Move to instructions modal?\r\n            document.querySelector(App.S_VIBRATION_INSTRUCTIONS).setAttribute('hidden', true);\r\n        }\r\n\r\n        this.initToggleButtons();\r\n\r\n        const playButtonElement = document.querySelector(App.S_PLAY);\r\n\r\n        if (isFirstTime) {\r\n\r\n            playButtonElement.onclick = () => {\r\n                this.isFirstTime = localStorage.firstTime = false;\r\n\r\n                playButtonElement.setAttribute('hidden', true);\r\n\r\n                this.instructionsModal.close();\r\n\r\n                document.activeElement.blur();\r\n\r\n                this.slotMachine.start();\r\n            };\r\n        } else {\r\n            playButtonElement.setAttribute('hidden', true);\r\n        }\r\n\r\n        // TODO: Pass params as options, except for root selector or some of the basic ones...:\r\n\r\n        // Init/render instructions modal, which might be open straight away:\r\n        this.instructionsModal = new Modal(\r\n            App.S_INSTRUCTIONS_MODAL,\r\n            App.S_INSTRUCTIONS_MODAL_BUTTON,\r\n            'instructions',\r\n            isFirstTime,\r\n            isFirstTime,\r\n            this.handleModalToggle,\r\n        );\r\n\r\n        // Init/render slot machine symbols:\r\n        this.slotMachine = new SlotMachine(\r\n            this.mainElement,\r\n            this.handleUseCoin,\r\n            this.handleGetPrice,\r\n            5,\r\n            SYMBOLS_RANDOM,\r\n            isFirstTime,\r\n        );\r\n\r\n        // Init/render pay table and pay table modal, which is always closed in the beginning:\r\n        this.payTable = new PayTable(SYMBOLS_RANDOM);\r\n\r\n        // TODO: Should be disabled in the begining (or hide button):\r\n        // TODO: Hide modals with hidden rather than is-open...\r\n        // eslint-disable-next-line no-new\r\n        new Modal(\r\n            App.S_PAY_TABLE_MODAL,\r\n            App.S_PAY_TABLE_MODAL_BUTTON,\r\n            'pay-table',\r\n            false,\r\n            false,\r\n            this.handleModalToggle,\r\n        );\r\n    }\r\n\r\n    initToggleButtons() {\r\n        // eslint-disable-next-line no-new\r\n        new ToggleButton(App.S_TOGGLE_SOUND, 'sound', !this.isSoundDisabled, handleOptionChange);\r\n\r\n        if (HAS_TOUCH) {\r\n            // eslint-disable-next-line no-new\r\n            new ToggleButton(App.S_TOGGLE_VIBRATION, 'vibration', !this.isVibrationDisabled, handleOptionChange);\r\n        }\r\n    }\r\n\r\n    handleModalToggle(isOpen, key) {\r\n        if (!this.slotMachine || key.includes('-init')) return;\r\n\r\n        if (isOpen) {\r\n            this.slotMachine.pause();\r\n        } else {\r\n            this.slotMachine.resume();\r\n        }\r\n    }\r\n\r\n}\r\n","import { App } from './components/app/app.component';\r\n\r\n// eslint-disable-next-line no-new\r\nnew App();\r\n"],"names":["SYMBOLS_CLASSIC","ALL_SYMBOLS","SYMBOLS_RANDOM","Math","random","length","IS_IOS","test","navigator","platform","IS_FIREFOX","userAgent","toLowerCase","includes","HAS_TOUCH","maxTouchPoints","window","DocumentTouch","document","dynamicStyles","SoundBuffer","sounds","nextSound","totalSounds","constructor","path","bufferSize","this","i","push","Audio","oncanplay","play","volume","sound","paused","stop","forEach","pause","currentTime","extension","blipSound","coinSound","stopSound","unluckySound","winSound","isEnabled","SMSoundService","blip","args","coin","unlucky","win","enable","disable","vibrate","bind","VIBRATION_STOP","VIBRATION_START","SMVibrationService","start","tap","callback","startTap","stopTap","invokeCallback","setGlobalClickAndTabHandler","cb","console","trace","ontouchstart","ontouchmove","ontouchcancel","ontouchend","onmousedown","createElement","className","content","angle","style","element","Array","isArray","join","innerText","appendChild","transform","SlotMachineReel","root","index","alpha","shadowCount","stopAt","symbols","diameter","C_REEL","C_CELL","C_CELL_SHADOW","C_CELL_BLUR","C_FIGURE","C_IS_STOP","V_INDEX","setProperty","cellShadowClasses","shadowOpacityWeight","max","round","PI","beta","a","j","floor","shuffle","symbol","symbolIndex","cellFigure","cell","shadowIndex","cloneNode","reset","classList","remove","animation","speed","deltaAlpha","ceil","animationName","animationDuration","name","end","angles","previousAngle","total","time","map","delta","abs","previousPercent","body","type","head","sheet","insertRule","addAnimation","t","p","toFixed","stopAtAnimation","STOP_ANIMATION_DURATION_MULTIPLIER","add","children","SlotMachine","UNITS_CENTER","UNITS_MARGIN","wrapper","querySelector","S_BASE","reelsContainer","S_REELS_CONTAINER","display","S_DISPLAY","reels","blipFading","reelCount","zoomTransitionTimeoutID","currentCombination","currentReel","blipCounter","lastUpdate","isPaused","keydownTimeoutID","keydownLastCalled","handleUseCoin","handleGetPrice","init","onresize","handleResize","onkeydown","handleKeyDown","onkeyup","handleKeyUp","handleClick","resume","shuffledSymbols","resize","V_SHADOW_WEIGHT","FIREFOX_SHADOW_WEIGHT","reelIndex","reel","zoomOut","C_IS_WIN","C_IS_FAIL","performance","now","requestAnimationFrame","tick","currentPrize","checkPrize","zoomIn","BLIP_RATE","zoom","out","clearTimeout","transition","ZOOM_TRANSITION","C_HAS_ZOOM","setTimeout","ZOOM_TRANSITION_DURATION","offsetWidth","offsetHeight","wrapperSize","min","APP_PADDING","reelSize","UNITS_TOTAL","V_WRAPPER_SIZE","V_REEL_SIZE","V_DISPLAY_SIZE","V_DISPLAY_ZOOM","stopReel","occurrencesCount","maxOccurrences","lastSymbol","maxSymbol","maxPrize","occurrences","indexOf","e","key","activeElement","elapsed","Date","target","targetTagName","tagName","parentTagName","parentElement","blur","which","capitalize","str","split","part","toUpperCase","substring","ToggleButton","icon","value","onButtonClick","selector","initialValue","onclick","handleButtonClicked","label","C_IS_DISABLED","setAttribute","toggle","stopPropagation","ModalButton","isOpen","open","close","C_IS_OPEN","Modal","closeButton","modalButton","isFixed","onModalToggled","selectorRoot","selectorButton","S_CLOSE_BUTTON","handleClickOutside","addEventListeners","addEventListener","removeEventListeners","removeEventListener","undefined","contains","OPEN_MODAL","setFixed","setDismissible","removeAttribute","PayTable","S_ROOT","payMatrix","activeColumn","innerHTML","figureWeight","pay3","pay4","pay5","S_INITIALLY_ACTIVE_COLUMN","S_HEADER","handleColumnClicked","column","parseInt","replace","C_COLUMN","C_BASE","C_ACTIVE","SERVICES","vibration","handleOptionChange","service","localStorage","setItem","App","coinsElement","S_COINS","jackpotElement","S_JACKPOT","spinsElement","S_SPINS","mainElement","S_MAIN","slotMachine","payTable","instructionsModal","coins","jackpot","spins","lastSpin","isSoundDisabled","isVibrationDisabled","isFirstTime","firstTime","ONE_DAY","handleModalToggle","focusActive","C_FOCUS_ACTIVE","initUI","refreshGameInfo","jackpotPercentage","price","maxValue","padding","toString","padStart","S_TOGGLE_VIBRATION","S_VIBRATION_INSTRUCTIONS","initToggleButtons","playButtonElement","S_PLAY","S_INSTRUCTIONS_MODAL","S_INSTRUCTIONS_MODAL_BUTTON","S_PAY_TABLE_MODAL","S_PAY_TABLE_MODAL_BUTTON","S_TOGGLE_SOUND"],"sourceRoot":""}